/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0";
    object      epsilon;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 2 -3 0 0 0 0];

internalField   uniform 30000;

boundaryField
{
    wallTube
    {
        type            compressible::epsilonWallFunction;
        Cmu             0.09;
        kappa           0.41;
        E               9.8;
        value           uniform 1;
    }
    outlet
    {
        type            zeroGradient;
    }
    inletPilot
    {
        /*type            fixedValue;
        value             uniform 10;*/
        
         type            compressible::turbulentMixingLengthDissipationRateInlet;
         mixingLength    0.000735;
         value           uniform 1;
    }
    inletAir
    {
       /* type            fixedValue;
        value             uniform 10;*/
        type            compressible::turbulentMixingLengthDissipationRateInlet;
        mixingLength    0.0197;
        value           uniform 1;
    }
    wallOutside
    {
        type            compressible::epsilonWallFunction;
        Cmu             0.09;
        kappa           0.41;
        E               9.8;
        value           uniform 1;
    }
    inletCH4
    {
       /* type            fixedValue;
        value             uniform 50;*/
        type            compressible::turbulentMixingLengthDissipationRateInlet;
        mixingLength    0.000504;
        value           uniform 1;
    }
    frontAndBack_pos
    {
        type            wedge;
    }
    frontAndBack_neg
    {
        type            wedge;
    }
}

// ************************************************************************* //
